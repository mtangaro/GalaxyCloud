tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/mtangaro/custom_types.yaml

description: >
  TOSCA test for launching a Virtual Cluster.

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Maximum number of WNs in the elastic cluster
      default: 5
      required: yes
    fe_cpus:
      type: integer
      description: Numer of CPUs for the front-end node
      default: 2
      required: yes
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GB
      required: yes
    wn_cpus:
      type: integer
      description: Numer of CPUs for the WNs
      default: 2
      required: yes
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 4 GB
      required: yes
    storage_size:
      type: string
      description: storage memory required for the instance
      default: 200 GB
    hybrid:
      type: boolean
      description: Flag to specify that this cluster will work in an hybrid environment
      default: false
      required: false

    admin_email:
      type: string
      description: email of the admin user
      default: admin@admin.com
    admin_api_key:
      type: string
      description: key to access the API with admin role
      default: not_very_secret_api_key
    version:
      type: string
      description: galaxy version to install
      default: release_17.05
    instance_description:
      type: string
      description: galaxy instance description
      default: ELIXIR MM IP test
    instance_key_pub:
      type: string
      description: galaxy instance ssh public key
      default: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDy787GZIVdHW7QV+Wu2q9q5k5CiTOq04ENioVig88IIVGNqi8qiX+3fhZx/w2hhlz6AePrYu8CfVPplCRdSMjP46av53V1M7r0+yqJvuk1PC2f/rSoEL95TvaeiV28+5Wy4MC58UvYuewuhIHcbfPiXHf3NEE3scd38GXCYKLhAP28mUQ950Ar4SoWv4irv21maJwkwqn5AYXcy1yrbBZtaTbQELVPa/E6X9j+k29bn32ITmmtKBA3ne/QlFRaaYI3XggvMXhhSSIYsJUdlSOjUTriB2DraHsxMGfOPjmPXkjvrXp9MfOzjMg10fb7K2Mda8u/ujK/dvx3BnhlSIpn marco@marco-Latitude-3440'
    export_dir:
      type: string
      description: path to store galaxy data
      default: /export

  node_templates:

    galaxy_portal:
      type: tosca.nodes.indigo.GalaxyPortal
      properties:
        admin_email: { get_input: admin_email }
        admin_api_key: { get_input: admin_api_key }
        version: { get_input: version }
        instance_description: { get_input: instance_description }
        instance_key_pub: { get_input: instance_key_pub }
        export_dir: { get_input: export_dir }
      requirements:
        - lrms: lrms_front_end

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        wn_ips: { get_attribute: [ lrms_wn, private_address ] }
        hybrid: { get_input: hybrid }
      requirements:
        - host: lrms_server

    lrms_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: slurmserver
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 80
              ftp_port:
                protocol: tcp
                source: 21
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            #image: ost://cloud.recas.ba.infn.it/9ba220c2-7205-484b-bd19-d4af8194d298 # Ubuntu 16.04
            #image: ost://cloud.recas.ba.infn.it/303d8324-69a7-4372-be24-1d68703affd7 # Ubuntu 14.04.3
            image: ost://cloud.recas.ba.infn.it/14984769-771a-4a96-89a9-87d65f16b982 # CentOS 7 1708 Base 0.2
      requirements:
        # contextually this can only be a relationship type
        - local_storage:
            # capability is provided by Compute Node Type
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: { get_input: export_dir }
                device: hdb

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ lrms_server, public_address, 0 ] }
        hybrid: { get_input: hybrid }
      requirements:
        - host: lrms_wn

    galaxy_wn:
      type: tosca.nodes.indigo.GalaxyWN
      properties:
        export_dir: { get_input: export_dir }
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
      requirements:
        - host: lrms_wn
        - dependency: galaxy_portal

    lrms_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            #image: ost://cloud.recas.ba.infn.it/9ba220c2-7205-484b-bd19-d4af8194d298 # Ubuntu 16.04
            #image: ost://cloud.recas.ba.infn.it/303d8324-69a7-4372-be24-1d68703affd7 # Ubuntu 14.04.3
            image: ost://cloud.recas.ba.infn.it/14984769-771a-4a96-89a9-87d65f16b982 # CentOS 7 1708 Base 0.2


  outputs:
    galaxy_url:
      value: { concat: [ 'http://', get_attribute: [ lrms_server, public_address, 0 ], '/galaxy' ] }
    cluster_ip:
      value: { get_attribute: [ lrms_server, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ lrms_server, endpoint, credential, 0 ] }
