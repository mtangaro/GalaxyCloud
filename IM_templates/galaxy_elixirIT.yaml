tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/mtangaro/custom_types.yaml

description: >
  TOSCA test for launching a Galaxy Server also configuring the bowtie2
  tool using Galaxy Tool Shed.

topology_template:
  inputs:
    number_cpus:
      type: integer
      description: number of cpus required for the instance
      default: 2
    memory_size:
      type: string
      description: ram memory required for the instance
      default: 4 GB
    storage_size:
      type: string
      description: storage memory required for the instance
      default: 50 GB      

    admin_email:
      type: string
      description: email of the admin user
      default: ma.tangaro@gmail.com
    admin_api_key:
      type: string
      description: key to access the API with admin role
      default: GALAXY_ADMIN_API_KEY
    user:
      type: string
      description: username to launch the galaxy daemon
      default: galaxy
    version:
      type: string
      description: galaxy version to install
      default: release_17.09
    instance_description:
      type: string
      description: galaxy instance description
      default: "INDIGO Galaxy test"
    instance_key_pub:
      type: string
      description: galaxy instance ssh public key
      default: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDy787GZIVdHW7QV+Wu2q9q5k5CiTOq04ENioVig88IIVGNqi8qiX+3fhZx/w2hhlz6AePrYu8CfVPplCRdSMjP46av53V1M7r0+yqJvuk1PC2f/rSoEL95TvaeiV28+5Wy4MC58UvYuewuhIHcbfPiXHf3NEE3scd38GXCYKLhAP28mUQ950Ar4SoWv4irv21maJwkwqn5AYXcy1yrbBZtaTbQELVPa/E6X9j+k29bn32ITmmtKBA3ne/QlFRaaYI3XggvMXhhSSIYsJUdlSOjUTriB2DraHsxMGfOPjmPXkjvrXp9MfOzjMg10fb7K2Mda8u/ujK/dvx3BnhlSIpn marco@marco-Latitude-3440'
    export_dir:
      type: string
      description: path to store galaxy data
      default: /export

    galaxy_storage_type:
      type: string
      description: Storage type (Iaas Block Storage, Onedata, Filesystem encryption)
      default: "encryption"
    userdata_provider:
      type: string
      description: default OneProvider
      default: "not_a_privder_url"
    userdata_token:
      type: string
      description: Access token for onedata space
      default: "not_a_token"
    userdata_space:
      type: string
      description: Onedata space
      default: "galaxy"

    flavor:
      type: string
      description: Galaxy flavor for tools installation
      default: "galaxy-rna-workbench"

    reference_data:
      type: boolean
      description: Install Reference data
      default: true
    refdata_dir:
      type: string
      description: path to store galaxy reference data
      default: /refdata
    refdata_repository_name:
      type: string
      description: Onedata space name, CernVM-FS repository name or subdirectory downaload name
      default: 'elixir-italy.galaxy.refdata'
    refdata_provider_type:
      type: string
      description: Select Reference data provider type (Onedata, CernVM-FS or download)
      default: 'cvmfs'
    refdata_provider:
      type: string
      description: Oneprovider for reference data
      default: 'not_a_provider'
    refdata_token:
      type: string
      description: Access token for reference data
      default: 'not_a_token'
    refdata_cvmfs_server_url:
      type: string
      description: CernVM-FS server, replica or stratum-zero
      default: '90.147.102.186'
    refdata_cvmfs_repository_name:
      type: string
      description: Reference data CernVM-FS repository name
      default: 'elixir-italy.galaxy.refdata'
    refdata_cvmfs_key_file:
      type: string
      description: CernVM-FS public key
      default: 'elixir-italy.galaxy.refdata.pub'
    refdata_cvmfs_proxy_url:
      type: string
      description: CernVM-FS proxy url
      default: 'DIRECT'
    refdata_cvmfs_proxy_port:
      type: integer
      description: CernVM-FS proxy port
      default: 80

 
  node_templates:

    galaxy:
      type: tosca.nodes.indigo.GalaxyPortalAndStorage
      properties:
        os_storage: { get_input: galaxy_storage_type }
        token: { get_input: userdata_token }
        provider: { get_input: userdata_provider }
        space: { get_input: userdata_space }
        admin_email: { get_input: admin_email }
        admin_api_key: { get_input: admin_api_key }
        version: { get_input: version }
        instance_description: { get_input: instance_description }
        instance_key_pub: { get_input: instance_key_pub }
        export_dir: { get_input: export_dir }
      requirements:
        - lrms: local_lrms

    galaxy_tools:
      type: tosca.nodes.indigo.GalaxyShedTool
      properties:
        flavor: { get_input: flavor }
        admin_api_key: { get_input: admin_api_key }
      requirements:
        - host: galaxy

    galaxy_refdata:
      type: tosca.nodes.indigo.GalaxyReferenceData
      properties:
        reference_data: { get_input: reference_data }
        refdata_dir: { get_input: refdata_dir }
        flavor: { get_input: flavor }
        refdata_repository_name: { get_input: refdata_repository_name }
        refdata_provider_type: { get_input: refdata_provider_type }
        refdata_provider: { get_input: refdata_provider }
        refdata_token: { get_input: refdata_token }
        refdata_cvmfs_server_url: { get_input: refdata_cvmfs_server_url }
        refdata_cvmfs_repository_name: { get_input: refdata_cvmfs_repository_name }
        refdata_cvmfs_key_file: { get_input: refdata_cvmfs_key_file }
        refdata_cvmfs_proxy_url: { get_input: refdata_cvmfs_proxy_url }
        refdata_cvmfs_proxy_port: { get_input: refdata_cvmfs_proxy_port }
      requirements:
        - host: galaxy
        - dependency: galaxy_tools

    # type to describe a Galaxy not using any LRMS but using the local system
    local_lrms:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Local
      requirements:
        - host: galaxy_server
 
    galaxy_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 80
              ftp_port:
                protocol: tcp
                source: 21
        # Host container properties
        host:
         properties:
           num_cpus: { get_input: number_cpus }
           mem_size: { get_input: memory_size }
        # Guest Operating System properties
        os:
          properties:
            #image: ost://cloud.recas.ba.infn.it/f38d4e87-cc7e-4035-921b-6b200a9ebaee # CentOS 7 1708
            image: ost://cloud.recas.ba.infn.it/0c4c232d-d90d-43da-b53a-ccbe8a6edc46 # CentOS 7 1708 BASE 
      requirements:
        # contextually this can only be a relationship type
        - local_storage:
            # capability is provided by Compute Node Type
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: { get_input: export_dir }
                device: hdb

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

  outputs:
    galaxy_url:
      value: { concat: [ 'http://', get_attribute: [ galaxy_server, public_address, 0 ], '/galaxy' ] }
